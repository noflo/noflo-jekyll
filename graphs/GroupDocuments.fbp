# This graph groups all textual documents to various groups,
# parses them, and outputs them to the corresponding output
# port.

# @runtime noflo-nodejs

# Filenames to be processed. These should only contain text/* files
INPORT=Read.IN:IN

# Layout templates
OUTPORT=Layout.OUT:LAYOUT

# Layout include files
OUTPORT=Include.OUT:INCLUDE

# Posts
OUTPORT=Post.OUT:POST

# Other Front Matter documents, to be copied as-is after templating
OUTPORT=DocRouter.MISSED:STATIC

# Error handling
OUTPORT=Read.ERROR:ERRORS

# Parse Front Matter from files
Read(filesystem/ReadFile) OUT -> CONTENT Parse(yaml/ParseFrontmatter)
Parse RESULTS -> IN Parsed(core/Split)

'path' -> KEY FileName(objects/GetObjectKey)
Parsed OUT -> IN FileName
'/' -> DELIMITER SplitPath(strings/SplitStr)
FileName OUT -> IN DirName(filesystem/DirName)
DirName OUT -> IN SplitPath
SplitPath OUT -> IN FileDir(packets/LastPacket)
'collection' -> PROPERTY SetGroup(objects/SetPropertyValue)
FileDir OUT -> VALUE SetGroup

Parsed OUT -> IN SetGroup
'collection' -> KEY Group(groups/GroupByObjectKey)
SetGroup OUT -> IN RemoveGroups(groups/RemoveGroups) OUT -> IN Group

'_layouts' -> ROUTE DocRouter(routers/GroupRouter)
'_includes' -> ROUTE DocRouter
'_posts' -> ROUTE DocRouter
'_' -> ROUTE DocRouter
DocRouter ROUTE -> IN Drop(core/Drop)

# Layout templates
DocRouter OUT -> IN Layout(core/Repeat)

# Includes
DocRouter OUT -> IN Include(core/Repeat)

# Posts
DocRouter OUT -> IN Post(core/Repeat)

# Other _ directories
DocRouter OUT -> IN DropUnderscores(core/Drop)

Group OUT -> IN DocRouter
